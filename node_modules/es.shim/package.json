{
  "_args": [
    [
      {
        "raw": "es.shim@^0.0.2",
        "scope": null,
        "escapedName": "es.shim",
        "name": "es.shim",
        "rawSpec": "^0.0.2",
        "spec": ">=0.0.2 <0.0.3",
        "type": "range"
      },
      "C:\\Users\\Jae\\Desktop\\Slacking Food Blog\\node_modules\\mysqli"
    ]
  ],
  "_from": "es.shim@>=0.0.2 <0.0.3",
  "_id": "es.shim@0.0.2",
  "_inCache": true,
  "_location": "/es.shim",
  "_nodeVersion": "7.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/es.shim-0.0.2.tgz_1488214967056_0.033537720097228885"
  },
  "_npmUser": {
    "name": "yutent",
    "email": "yutent@doui.cc"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "es.shim@^0.0.2",
    "scope": null,
    "escapedName": "es.shim",
    "name": "es.shim",
    "rawSpec": "^0.0.2",
    "spec": ">=0.0.2 <0.0.3",
    "type": "range"
  },
  "_requiredBy": [
    "/mysqli"
  ],
  "_resolved": "https://registry.npmjs.org/es.shim/-/es.shim-0.0.2.tgz",
  "_shasum": "a76b37a7a9f7c5461be799cdcb7e57b03eafa5b2",
  "_shrinkwrap": null,
  "_spec": "es.shim@^0.0.2",
  "_where": "C:\\Users\\Jae\\Desktop\\Slacking Food Blog\\node_modules\\mysqli",
  "author": {
    "name": "yutent"
  },
  "bugs": {
    "url": "https://github.com/yutent/es.shim/issues"
  },
  "dependencies": {},
  "description": "Some shim api that let you can use in all node.js environment",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "a76b37a7a9f7c5461be799cdcb7e57b03eafa5b2",
    "tarball": "https://registry.npmjs.org/es.shim/-/es.shim-0.0.2.tgz"
  },
  "gitHead": "d9b9ffe0319d8c89fa0a100020eee6d7ef659a26",
  "homepage": "https://github.com/yutent/es.shim#readme",
  "keyworks": [
    "es5",
    "es6",
    "polyfill",
    "extend",
    "shim"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "yutent",
      "email": "yutent@doui.cc"
    }
  ],
  "name": "es.shim",
  "optionalDependencies": {},
  "readme": "![module info](https://nodei.co/npm/es.shim.png?downloads=true&downloadRank=true&stars=true)\n\n# es.shim\n> `es.shim` is an extend module for letting you can use some future api in current Node.js version.\n> Also some useful api for you.\n\n\n+ Obejct\n    * empty()\n\n\n+ Obejct.prototype\n    * merge()\n\n\n+ Array.prototype\n    * includes()\n\n\n\n+ Date\n    * isDate()\n\n\n+ Date.prototype\n    * getFullWeek()\n    * getWeek()\n    * format()\n\n\n+ String.prototype\n    * splice()\n    * htmlspecialchars()\n    * tohtml()\n    * xss()\n    * escape()\n    * padStart()\n    * padEnd()\n\n\n\n+ global\n    * gmdate()\n    * empty()\n    \n\n\n## Usage\n\n### 1. Object.prototype.merge()\n```javascript\nlet obj1 = {a: 123, b: 456}\nlet obj2 = {a: 22, c: 44}\nlet obj3 = {c: 11, e: 55}\n\no1.merge(o2)\n// now obj1 is {a: 22, b: 456, c: 44}\n// nothing to obj2 \n\no1.merge(o2, o3)\n// obj1 will be {a: 22, b: 456, c: 11, e: 55}\n// nothing to obj2 & obj3\n\n```\n\n### 2. Object.empty()\n```javascript\nObject.empty({}) // true\nObject.empty({a: 213}) // false\nObject.empty([]) // true\nObject.empty([null]) // false\nObject.empty([undefined]) // false\n\n```\n\n\n### 3. Array.prototype.includes()\n```javascript\nlet arr = [1, '3', 54, 32, 'foo']\n\narr.includes(1) // true\narr.includes(3) // false\narr.includes('bar') // false\narr.includes('54') // false\n\n```\n\n\n### 4. Date.isDate()\n```javascript\n\nDate.isDate(new Date()) // true\nDate.isDate({}) // false\nDate.isDate(['bar']) // false\nDate.isDate('foo') // false\n\n```\n\n\n### 5. Date.prototype.format(format)\n> `format` can be these below:\n> - Y (with century) eg. 1970,2017\n> - y (without century) eg. 70, 117\n> - m month, 01-12\n> - n month, 1-12\n> - d date, 01-31\n> - j date, 1-31\n> - H hours 00-23\n> - h hours 00-12\n> - G hours 0-23\n> - g hours 0-12\n> - i minutes, 00-59\n> - s seconds, 00-59\n> - W how many weeks from 01-01 this year\n> - w how many weeks from 01 this month\n> - D week name, like Mon, Tue, Wed, Thu, Fri, Sat, Sun\n\n```javascript\n\nnew Date().format() // default 2017-02-08 12:11:23\nnew Date().format('Y-m-d') // 2017-02-08\nnew Date().format('Y/n/j') // 2017/2/8\nnew Date().format('Y年n月j日 第W周') // 2017年2月10日 第6周\nnew Date('Wed Feb 10 2016 23:34:04 GMT+0800 (CST)').format() // 2016-02-10 23:34:04\nnew Date('2016-08-10T13:14:44.000Z').format() //2016-08-10 21:14:44\nnew Date(1470834884000).format('') //2016-08-10 21:14:44\n\n```\n\n\n### 6. String.prototype.splice(start, len[, fill])\n- start `<Integer>`\n- len `<Integer>`\n- fill `<String>`\n\n```javascript\nlet str = 'Hello baby';\n\nstr.splice(0, 5) // return  ' baby'\nconsole.log(str) // nothing tostr, so it return 'Hello baby'\n\nstr.splice(0, 5, 'Love') //return 'Love baby'\n\nstr.splice(6, 0, 'world, ')// return 'Hello world, baby'\n\nstr = str.splice(6) //return  'Holle '\n\n```\n\n\n### 7. String.prototype.htmlspecialchars([sign])\n> Just like php's function - `htmlspecialchars`\n- sign `<String>` (ENT_QUOTES/ENT_NOQUOTES)\n\n```javascript\nlet str = `<script>alert('hello world')</script>`\n\nstr.htmlspecialchars() // &lt;script&gt;alert('hello world')&lt;/script&gt;\nstr.htmlspecialchars('ENT_QUOTES') // &lt;script&gt;alert(&#39;hello world&#39;)&lt;/script&gt;\n\n```\n\n\n### 8. String.prototype.tohtml()\n```javascript\nlet str = `&lt;script&gt;alert(&#39;hello world&#39;)&lt;/script&gt;`\nstr.tohtml() // <script>alert('hello world')</script>\n\n```\n\n\n\n\n### 9.global.empty()\n\n```javascript\nempty('') //true\nempty(null) //true\nempty(undefined) //true\nempty([]) //true\nempty({}) //true\nempty({a: 123}) //false\nempty(0) //true\nempty('0') //false\nempty(1) //false\n\n```\n\n\n### 10.global.gmdate()\n> Base on Date.prototype.format\n\n```javascript\ngmdate() // 2017-02-08 12:11:23\ngmdate('Y-m-d') // 2017-02-08\ngmdate('', 1470834884000) //2016-08-10 21:14:44\n\n```\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yutent/es.shim.git"
  },
  "scripts": {},
  "version": "0.0.2"
}
